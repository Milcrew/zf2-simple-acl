<?php
return array(
    'zf2simpleacl' => array(
        /**
         * This route will be used by RedirectionStrategy for redirect unauthorized users,
         * who access to the forbidden page.
         *
         * By default: User will get only forbidden page and will not be redirected.
         * Examples:
         *  'redirect_route' => array('frontend' => 'frontend/user/login',
         *                            'backend' => 'backend/user/login',
         *                            0 => 'frontend/user/login')
         *  or
         *   'redirect_route' => 'main/admin/user/login'
         */
        'redirect_route' => 'main/admin/user/login',


        /**
         * Recognizers should be defined if you want the special
         * authorization process for some of role types.
         **/
        'recognizers' => array('cron'),

        /**
         * This route/routes will be used by RedirectionStrategy for redirect authorized users who
         * requested denied resource.
         *
         * By default: User will get only forbidden page and will not be redirected.
         *
         * Examples:
         *      In this example, authorized user will be redirected to the defined route, depends on
         *      route which they visited before requested forbidden resource.
         *      So authorized user who requested any frontend's child which forbidden for his
         *      account will be redirected to the frontend/user/login route. In the second case, user
         *      will be redirected to the backend/user/login.
         *
         *  'deny_redirect_route' => array('frontend' => array('admin' => array('frontend/user/login')),
         *                                 'backend' => array('user' => array('frontend/user'),
                                                              'admin' => array('backend'))
         *  or
         *      In this example, authorized user will be redirected to the defined route,
         *      instead of see forbidden page.
         *  'deny_redirect_route' => 'main/admin/user/login'
         */
         'deny_redirect_route' => 'main/admin/user/login',

        /**
         * It is the define default behavior for acl. If value 'permissive' it will mean
         * "allow all from all" so then you will have to restrict all resources which you want to be restricted.
         * If value 'strict' it is will mean "deny all from all" so then you will have to allow every resource which
         * which you want to be available
         */
        'restriction_strategy' => 'permissive',

        /* Routes which you want to restrict */
        'routes' => array(
            'main' => array(true)
        ),

        /* Roles which you support in your application */
        'roles' => array(array('name'=>'admin', 'id'=>1),
                         array('name'=>'cron',
                               'id'=>2,
                               'data' => array(
                                   'type'=>'cron',
                                   // It is authorization token, value will be compared with
                                   // token inside $_COOKIE['cron'] and will decide that this is
                                   // cron role.
                                   'token'=>'a43b4caa46fb39a1d48b89e25f0e79df'
                        )))
    )
);
